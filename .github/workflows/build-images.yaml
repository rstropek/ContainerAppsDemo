
name: Build container images

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "ContainerAppsDemo.Backend/**"

jobs:
  build:
    env:
      AcrName: acritvinfotag
      StorageAccountName: itvinfotagweb

    permissions:
      id-token: write

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Azure ACR Login
      run: |
        az acr login --name ${{ env.AcrName }}

    - name: Build and publish backend
      uses: docker/build-push-action@v3
      with:
        context: ContainerAppsDemo.Backend
        tags: ${{ env.AcrName }}.azurecr.io/containerappsdemo/backend:latest
        push: true

    - name: Build and publish bff
      uses: docker/build-push-action@v3
      with:
        context: ContainerAppsDemo.BackendForFrontend
        tags: ${{ env.AcrName }}.azurecr.io/containerappsdemo/bff:latest
        push: true

    - name: Build and publish frontend
      uses: docker/build-push-action@v3
      with:
        context: ContainerAppsDemo.Frontend
        tags: ${{ env.AcrName }}.azurecr.io/containerappsdemo/frontend:latest
        push: true
    
    - uses: actions/setup-node@v3
      with:
        node-version: lts/*
    
    - name: Build frontend
      working-directory: ContainerAppsDemo.Frontend
      run: |
        npm install
        npm run build

    - name: Copy frontend
      working-directory: ContainerAppsDemo.Frontend
      run: |
        end=`date -u -d "30 minutes" '+%Y-%m-%dT%H:%MZ'`
        sas=`az storage container generate-sas --account-name ${{ env.StorageAccountName }} -n '$web' --https-only --permissions dlrw --expiry $end --only-show-errors -o tsv`
        az extension add --name storage-preview
        az storage blob directory upload --account-name ${{ env.StorageAccountName }} -c '$web' -s ./dist -d . --recursive --sas-token $sas --only-show-errors
